GS.Shape=function(a){this.scene=a,this.vertices=[],this.faces=[],this.colors=[],this.edgeMap={},this.defaultColor=Math.random()*16777215,this.singleColorMtl=!0,this.wireframeMode=!1},GS.Shape.prototype={_init:function(){this.colors=[];for(var a=0,b=this.faces.length;a<b;++a)this.colors.push(Math.random()*16777215)},clone:function(){var a,b,c=new GS.Shape;c.scene=this.scene,c.defaultColor=this.defaultColor,c.singleColorMtl=this.singleColorMtl,c.wireframeMode=this.wireframeMode,c.vertices=Array(this.vertices.length);for(a=0,iLen=this.vertices.length;a<iLen;++a)b=this.vertices.vertices[a],c.vertices[a]=b.slice();c.faces=Array(this.faces.length);for(a=0,iLen=this.faces.length;a<iLen;++a)b=this.faces.vertices[a],c.faces[a]=b.slice();c.colors=this.colors.slice(0),c._init(),c._finishCreation();return c},_finishCreation:function(a){this._updateStructure()},_updateStructure:function(){var a,b;this.geo&&(this.scene.removeObject(this.mesh),delete this.geo,delete this.mesh),this.geo=new THREE.Geometry,this.geo.id="GS";for(a=0;a<this.vertices.length;++a)b=this.vertices[a],this.geo.vertices.push(new THREE.Vertex(new THREE.Vector3(b[0],b[1],b[2])));for(a=0;a<this.faces.length;++a)b=this.faces[a],this.geo.faces.push(new THREE.Face4(b[0],b[1],b[2],b[3]));this.geo.computeCentroids(),this.geo.computeFaceNormals();if(this.singleColorMtl)this.mesh=new THREE.Mesh(this.geo,[new THREE.MeshNormalMaterial({}),new THREE.MeshBasicMaterial({color:0,wireframe:!0,wireframeLinewidth:2,transparent:!0})]);else{var c;for(a=0,iLen=this.geo.faces.length;a<iLen;++a)c=this.geo.faces[a],c.material=[new THREE.MeshBasicMaterial({color:this.colors[a],wireframe:this.wireframeMode})];this.mesh=new THREE.Mesh(this.geo,new THREE.MeshFaceMaterial)}this._computeEdgeMap(),this.scene.addObject(this.mesh)},_computeEdgeMap:function(a){var b,c,d,e,f,g,h,i;this.edgeMap={};for(b=0,c=this.faces.length;b<c;++b){e=this.faces[b];for(d=0;d<4;++d)f=e[(d+1)%4],g=e[d],h=new GS.OrderedPair(f,g),i=this.edgeMap[h],i!==undefined?(i.addItem(b),a&&console.log(h+" -> "+i)):(i=new GS.OrderedPair(b),this.edgeMap[h]=i,a&&console.log(h+" -> "+i))}},_getEdges:function(){var a=[];for(k in this.edgeMap)a.push(this.edgeMap[k]);return a},printEdgeMap:function(){var a,b;for(a in this.edgeMap)b=this.edgeMap[a],console.log(a+" -> "+b)},printEdges:function(){var a="";for(var b in this.edgeMap)a+=", "+b;console.log(a.substring(2))},_isInEdgeMap:function(a){return typeof this.edgeMap[a]!="undefined"},_isInEdgeLoop:function(a,b){var c,d,e=a.length;for(d=0;d<e;++d){c=a[d];if(c.equals(b))return!0}return!1},_isInFaceLoop:function(a,b){var c,d,e=a.length;for(d=0;d<e;++d){c=a[d];return b===c}return!1},_getOppositeEdge:function(a,b){var c=[],d=this.faces[a],e,f;for(e=0;e<4;++e)c.push(new GS.OrderedPair(d[e%4],d[(e+1)%4]));for(e=0;e<4;++e){f=c[e];if(f.equals(b))return c[(e+2)%4]}},_getNeighbourFaces:function(a,b){var c=[],d,e,f,g,h,i;for(d=0;d<4;++d)e=this.faces[a][d],f=this.faces[a][(d+1)%4],g=new GS.OrderedPair(e,f),h=this.edgeMap[g],i=h.items[0],i!==undefined&&i!==a&&c.push(i),i=h.items[1],i!==undefined&&i!==a&&c.push(i),b&&console.log("edge: "+g+" face: #"+(h.items[0]!==a?h.items[0]:h.items[1]));return c},_getEdgeLoop:function(a){var b=[],c=a.clone(),d,e,f;for(;;){var d=this.edgeMap[c],g=d.items[0],h=d.items[1];e=this._getOppositeEdge(g,c),f=this._getOppositeEdge(h,c);if(!this._isInEdgeLoop(b,e))c=e;else if(!this._isInEdgeLoop(b,f))c=f;else return b;b.push(c)}},_filterDuplicates:function(a){var b={},c=[],d;for(var e=0,f=a.length;e<f;++e){d=a[e];if(b[d])continue;b[d]=!0,c.push(d)}return c},_getFaceLoop:function(a){var b=[],c=[],d=a,e,f,g,h,i;for(;;){e=this.edgeMap[d],f=e.items[0],g=e.items[1],h=this._getOppositeEdge(f,d),i=this._getOppositeEdge(g,d);if(!this._isInEdgeLoop(b,h))this._isInFaceLoop(c,f)||c.push(f),d=h;else if(!this._isInEdgeLoop(b,i))this._isInFaceLoop(c,g)||c.push(g),d=i;else{this._isInFaceLoop(c,f)||c.push(f),this._isInFaceLoop(c,g)||c.push(g);return this._filterDuplicates(c)}b.push(d)}},_getEdgeNormalDirection:function(a){var b=this.edgeMap[a],c=[0,0,0],d=[0,0,0],e=b.items[0],f=b.items[1];e!==undefined&&(c=this._getFaceNormal(e)),f!==undefined&&(d=this._getFaceNormal(f));var g=[c[0]+d[0],c[1]+d[1],c[2]+d[2]],h=Math.sqrt(g[0]*g[0]+g[1]*g[1]+g[2]*g[2]);return[g[0]/h,g[1]/h,g[2]/h]},_getEdgeCenter:function(a){var b=this.vertices[a.items[0]],c=this.vertices[a.items[1]],d=[b[0]+c[0],b[1]+c[1],b[2]+c[2]];return[d[0]*.5,d[1]*.5,d[2]*.5]},_getEdgeDirection:function(a,b){var c=this._getEdgeCenter(a),d=this.edgeMap[a],e=d.items[b],f=this._getOppositeEdge(e,a),g=this._getEdgeCenter(f),h=[c[0]-g[0],c[1]-g[1],c[2]-g[2]],i=Math.sqrt(h[0]*h[0]+h[1]*h[1]+h[2]*h[2]);return[h[0]/i,h[1]/i,h[2]/i]},_getFaceCenter:function(a){var b=[0,0,0],c=this.faces[a],d;for(var e=0;e<4;++e)d=this.vertices[c[e]],b[0]+=d[0],b[1]+=d[1],b[2]+=d[2];b[0]*=.25,b[1]*=.25,b[2]*=.25;return b},_getFaceNormal:function(a){typeof a=="number"&&(a=this.faces[a]);var b=this.vertices[a[0]],c=this.vertices[a[1]],d=this.vertices[a[2]],e=[c[0]-b[0],c[1]-b[1],c[2]-b[2]],f=[d[0]-c[0],d[1]-c[1],d[2]-c[2]],g=[e[1]*f[2]-e[2]*f[1],e[2]*f[0]-e[0]*f[2],e[0]*f[1]-e[1]*f[0]],h=Math.sqrt(g[0]*g[0]+g[1]*g[1]+g[2]*g[2]);return[g[0]/h,g[1]/h,g[2]/h]},_getFaceDirection:function(a,b){var c=this.faces[a],d=new GS.OrderedPair(c[b],c[(b+1)%4]),e=this._getFaceCenter(a),f=this._getEdgeCenter(d),g=[f[0]-e[0],f[1]-e[1],f[2]-e[2]],h=Math.sqrt(g[0]*g[0]+g[1]*g[1]+g[2]*g[2]);return[g[0]/h,g[1]/h,g[2]/h]},moveFaceDelta:function(a,b){var c=this.faces[a],d;for(var e=0;e<4;++e)d=this.vertices[c[e]][0]+=b[0],d=this.vertices[c[e]][1]+=b[1],d=this.vertices[c[e]][2]+=b[2];this._updateStructure()},moveFaceOutward:function(a,b){var c=this._getFaceNormal(a);c[0]*=b,c[1]*=b,c[2]*=b,this.moveFaceDelta(a,c)},moveFaceDirection:function(a,b,c){var d=this._getFaceDirection(a,b);d[0]*=c,d[1]*=c,d[2]*=c,this.moveFaceDelta(a,d)},extrudeFace:function(a,b){var c,d,e,f,g=this.faces[a],h=this._getFaceNormal(a),i=this.vertices.length,j=[];for(c=0;c<4;++c){j.push(i+c),e=this.vertices[g[c]],f=[0,0,0];for(d=0;d<3;++d)f[d]=b*h[d]+e[d];this.vertices.push(f)}this.faces[a]=j;var k=this.colors[a],l;for(c=0;c<4;++c)l=[0,0,0,0],l[0]=g[(c+1)%4],l[1]=j[(c+1)%4],l[2]=j[c%4],l[3]=g[c%4],this.faces.push(l),this.colors.push(Math.random()*16777215);this._updateStructure()},extrudeFaceDelta:function(a,b){this.extrudeFace(a,0),this.moveFaceDelta(a,b)},bevelFace:function(a,b){var c,d,e,f,g,h,i,j,k,l=this.faces[a],m=[];for(c=0;c<4;++c)d=this.vertices[l[(c+3)%4]],e=this.vertices[l[c]],f=this.vertices[l[(c+1)%4]],g=[d[0]-e[0],d[1]-e[1],d[2]-e[2]],h=[f[0]-e[0],f[1]-e[1],f[2]-e[2]],k=Math.sqrt(g[0]*g[0]+g[1]*g[1]+g[2]*g[2]),g=[g[0]/k,g[1]/k,g[2]/k],k=Math.sqrt(h[0]*h[0]+h[1]*h[1]+h[2]*h[2]),h=[h[0]/k,h[1]/k,h[2]/k],i=[g[0]+h[0],g[1]+h[1],g[2]+h[2]],k=Math.sqrt(i[0]*i[0]+i[1]*i[1]+i[2]*i[2]),i=[i[0]/k,i[1]/k,i[2]/k],i=[i[0]*b,i[1]*b,i[2]*b],j=[e[0]+i[0],e[1]+i[1],e[2]+i[2]],m.push(j);for(c=0;c<4;++c)this.vertices[l[c]]=m[c];this._updateStructure()},bevelExtrudedFace:function(a,b){this.extrudeFace(a,0),this.bevelFace(a,b)},_rotateFace:function(a){var b=a.pop();a.unshift(b)},splitFaceLoop:function(a){var b,c,d,e=this._getEdgeLoop(a),f=this._getFaceLoop(a),g=f.length,h=[],i=this.vertices.length;for(d=0;d<g;++d)h.push(i+d);var j,k,l,m;for(b=0,c=e.length;b<c;++b)j=e[b],k=this.vertices[j.items[0]],l=this.vertices[j.items[1]],m=[k[0]+l[0],k[1]+l[1],k[2]+l[2]],m=[m[0]*.5,m[1]*.5,m[2]*.5],this.vertices.push(m);var n,o,p,q,r,s;for(b=0,c=f.length;b<c;++b){n=f[b],o=this.faces[n];while(!e[b].equals(new GS.OrderedPair(o[1],o[2])))this._rotateFace(o);s=e[(b+1)%g],s.equals(new GS.OrderedPair(o[3],o[0]))?r=(b+1)%g:r=(b-1+g)%g,p=[0,0,0,0],p[0]=o[0],p[1]=o[1],p[2]=h[b],p[3]=h[r],this.faces[n]=p,q=[0,0,0,0],q[0]=o[2],q[1]=o[3],q[2]=h[r],q[3]=h[b],this.faces.push(q),this.colors.push(Math.random()*16777215)}this._updateStructure()},moveEdgeDelta:function(a,b){var c,d;c=a.items[0],d=this.vertices[c],d[0]+=b[0],d[1]+=b[1],d[2]+=b[2],this.vertices[c]=d,c=a.items[1],d=this.vertices[c],d[0]+=b[0],d[1]+=b[1],d[2]+=b[2],this.vertices[c]=d,this._updateStructure()},moveEdgeOutward:function(a,b){var c=this._getEdgeNormalDirection(a)*b;this.moveEdgeDelta(a,c)},moveEdgeDirection:function(a,b,c){var d=this._getEdgeDirection(a,b)*c;this.moveEdgeDelta(a,d)}}